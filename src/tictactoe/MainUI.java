/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tictactoe;

import javax.swing.JOptionPane;

/**
 *
 * @author student
 */
public class MainUI extends javax.swing.JFrame {

    /**
     * Creates new form MainUI
     */
    public MainUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        pnlBoard = new javax.swing.JPanel();
        btn00 = new javax.swing.JButton();
        btn01 = new javax.swing.JButton();
        btn02 = new javax.swing.JButton();
        btn10 = new javax.swing.JButton();
        btn11 = new javax.swing.JButton();
        btn12 = new javax.swing.JButton();
        btn20 = new javax.swing.JButton();
        btn21 = new javax.swing.JButton();
        btn22 = new javax.swing.JButton();
        lblplayerturn = new javax.swing.JLabel();
        lblplayeronescore = new javax.swing.JLabel();
        lblplayertwoscore = new javax.swing.JLabel();
        btnreset = new javax.swing.JButton();
        btnreload = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Tic Tac Toe Game");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel1.setText("p1 symbol : O & p2 symbol : X");

        pnlBoard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 153, 0), 3));
        pnlBoard.setLayout(new java.awt.GridLayout(3, 3));

        btn00.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btn00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn00ActionPerformed(evt);
            }
        });
        pnlBoard.add(btn00);

        btn01.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btn01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn01ActionPerformed(evt);
            }
        });
        pnlBoard.add(btn01);

        btn02.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btn02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn02ActionPerformed(evt);
            }
        });
        pnlBoard.add(btn02);

        btn10.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btn10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn10ActionPerformed(evt);
            }
        });
        pnlBoard.add(btn10);

        btn11.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btn11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn11ActionPerformed(evt);
            }
        });
        pnlBoard.add(btn11);

        btn12.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btn12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn12ActionPerformed(evt);
            }
        });
        pnlBoard.add(btn12);

        btn20.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btn20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn20ActionPerformed(evt);
            }
        });
        pnlBoard.add(btn20);

        btn21.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btn21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn21ActionPerformed(evt);
            }
        });
        pnlBoard.add(btn21);

        btn22.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btn22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn22ActionPerformed(evt);
            }
        });
        pnlBoard.add(btn22);

        lblplayerturn.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        lblplayerturn.setText("Player Turn: ");

        lblplayeronescore.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        lblplayeronescore.setText("P1 score : 0");

        lblplayertwoscore.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        lblplayertwoscore.setText("P2 Score: 0 ");

        btnreset.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnreset.setText("Reset");
        btnreset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnresetActionPerformed(evt);
            }
        });

        btnreload.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        btnreload.setText("Reload");
        btnreload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnreloadActionPerformed(evt);
            }
        });

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        jMenuItem1.setText("about");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(pnlBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblplayerturn)
                                    .addComponent(lblplayeronescore)
                                    .addComponent(lblplayertwoscore)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(btnreset)
                                .addGap(41, 41, 41)
                                .addComponent(btnreload)))))
                .addContainerGap(146, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(pnlBoard, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(lblplayerturn)
                        .addGap(34, 34, 34)
                        .addComponent(lblplayeronescore)
                        .addGap(38, 38, 38)
                        .addComponent(lblplayertwoscore)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnreset)
                            .addComponent(btnreload))))
                .addContainerGap(219, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JOptionPane.showMessageDialog(MainUI.this,"App developed by venki");
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void btn22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn22ActionPerformed
        if(turn %2==0){
            //p1 code
            btn22.setEnabled(false);
            btn22.setText("O");
            board[2][2]='O';
            if(checkWinner('O')){
                lockBoard();
                p1score++;
                lblplayeronescore.setText("p1 score: "+p1score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));
        }
        else{
            btn22.setEnabled(false);
            btn22.setText("X");
            board[2][2]='X';
            if(checkWinner('X')){
                lockBoard();
                p2score++;
                lblplayertwoscore.setText("p2 score: "+p2score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));            
        }
    }//GEN-LAST:event_btn22ActionPerformed

    private void btnresetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnresetActionPerformed
        // TODO add your handling code here:
        turn=0;
        p1score=0;
        p2score=0;
        
        unlockBoard();
        lblplayeronescore.setText("p1 score : 0");
        lblplayertwoscore.setText("p2 score : 0");
        lblplayerturn.setText("player Turn: "+(turn+1));
        
    }//GEN-LAST:event_btnresetActionPerformed

    private void btnreloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnreloadActionPerformed
        // TODO add your handling code here:
        unlockBoard();
        turn=0;
        lblplayerturn.setText("Player turn : "+(turn+1));
    }//GEN-LAST:event_btnreloadActionPerformed

    private void btn00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn00ActionPerformed
        if(turn %2==0){
            //p1 code
            btn00.setEnabled(false);
            btn00.setText("O");
            board[0][0]='O';
            if(checkWinner('O')){
                lockBoard();
                p1score++;
                lblplayeronescore.setText("p1 score: "+p1score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));
        }
        else{
            btn00.setEnabled(false);
            btn00.setText("X");
            board[0][0]='X';
            if(checkWinner('X')){
                lockBoard();
                p2score++;
                lblplayertwoscore.setText("p2 score: "+p2score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));            
        }
    }//GEN-LAST:event_btn00ActionPerformed

    private void btn01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn01ActionPerformed
        if(turn %2==0){
            //p1 code
            btn01.setEnabled(false);
            btn01.setText("O");
            board[0][1]='O';
            if(checkWinner('O')){
                lockBoard();
                p1score++;
                lblplayeronescore.setText("p1 score: "+p1score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));
        }
        else{
            btn01.setEnabled(false);
            btn01.setText("X");
            board[0][1]='X';
            if(checkWinner('X')){
                lockBoard();
                p2score++;
                lblplayertwoscore.setText("p2 score: "+p2score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));            
        }
    }//GEN-LAST:event_btn01ActionPerformed

    private void btn02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn02ActionPerformed
        if(turn %2==0){
            //p1 code
            btn02.setEnabled(false);
            btn02.setText("O");
            board[0][2]='O';
            if(checkWinner('O')){
                lockBoard();
                p1score++;
                lblplayeronescore.setText("p1 score: "+p1score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));
        }
        else{
            btn02.setEnabled(false);
            btn02.setText("X");
            board[0][2]='X';
            if(checkWinner('X')){
                lockBoard();
                p2score++;
                lblplayertwoscore.setText("p2 score: "+p2score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));            
        }
    }//GEN-LAST:event_btn02ActionPerformed

    private void btn10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn10ActionPerformed
        if(turn %2==0){
            //p1 code
            btn10.setEnabled(false);
            btn10.setText("O");
            board[1][0]='O';
            if(checkWinner('O')){
                lockBoard();
                p1score++;
                lblplayeronescore.setText("p1 score: "+p1score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));
        }
        else{
            btn10.setEnabled(false);
            btn10.setText("X");
            board[1][0]='X';
            if(checkWinner('X')){
                lockBoard();
                p2score++;
                lblplayertwoscore.setText("p2 score: "+p2score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));            
        }
    }//GEN-LAST:event_btn10ActionPerformed

    private void btn11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn11ActionPerformed
        if(turn %2==0){
            //p1 code
            btn11.setEnabled(false);
            btn11.setText("O");
            board[1][1]='O';
            if(checkWinner('O')){
                lockBoard();
                p1score++;
                lblplayeronescore.setText("p1 score: "+p1score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));
        }
        else{
            btn11.setEnabled(false);
            btn11.setText("X");
            board[1][1]='X';
            if(checkWinner('X')){
                lockBoard();
                p2score++;
                lblplayertwoscore.setText("p2 score: "+p2score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));            
        }
    }//GEN-LAST:event_btn11ActionPerformed

    private void btn12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn12ActionPerformed
        if(turn %2==0){
            //p1 code
            btn12.setEnabled(false);
            btn12.setText("O");
            board[1][2]='O';
            if(checkWinner('O')){
                lockBoard();
                p1score++;
                lblplayeronescore.setText("p1 score: "+p1score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));
        }
        else{
            btn12.setEnabled(false);
            btn12.setText("X");
            board[1][2]='X';
            if(checkWinner('X')){
                lockBoard();
                p2score++;
                lblplayertwoscore.setText("p2 score: "+p2score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));            
        }
    }//GEN-LAST:event_btn12ActionPerformed

    private void btn20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn20ActionPerformed
        if(turn %2==0){
            //p1 code
            btn20.setEnabled(false);
            btn20.setText("O");
            board[2][0]='O';
            if(checkWinner('O')){
                lockBoard();
                p1score++;
                lblplayeronescore.setText("p1 score: "+p1score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));
        }
        else{
            btn20.setEnabled(false);
            btn20.setText("X");
            board[2][0]='X';
            if(checkWinner('X')){
                lockBoard();
                p2score++;
                lblplayertwoscore.setText("p2 score: "+p2score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));            
        }
    }//GEN-LAST:event_btn20ActionPerformed

    private void btn21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn21ActionPerformed
        if(turn %2==0){
            //p1 code
            btn21.setEnabled(false);
            btn21.setText("O");
            board[2][1]='O';
            if(checkWinner('O')){
                lockBoard();
                p1score++;
                lblplayeronescore.setText("p1 score: "+p1score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));
        }
        else{
            btn21.setEnabled(false);
            btn21.setText("X");
            board[2][1]='X';
            if(checkWinner('X')){
                lockBoard();
                p2score++;
                lblplayertwoscore.setText("p2 score: "+p2score);
            }
            turn++;
            lblplayerturn.setText("player turn: "+((turn%2)+1));            
        }
    }//GEN-LAST:event_btn21ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainUI().setVisible(true);
            }
        });
    }
    
    void lockBoard(){
        for(int i=0;i<9;i++){
            pnlBoard.getComponent(i).setEnabled(false);
        }
    }
    void unlockBoard(){
        for(int i=0;i<9;i++){
            pnlBoard.getComponent(i).setEnabled(true);
        }
        btn00.setText("");
        btn01.setText("");
        btn02.setText("");
        
        btn10.setText("");
        btn11.setText("");
        btn12.setText("");
        
        btn20.setText("");
        btn21.setText("");
        btn22.setText("");
        
        turn=0;
        
        for(int i=0;i<3;i++){
            for(int j=0;j<3;j++){
                board[i][j]=' ';
            }
        }

    }
    
    boolean checkWinner(char symbol){
        for(int i=0;i<3;i++){
            //row check
            if((board[i][0]== symbol) && (board[i][1]==symbol) && (board[i][2]==symbol) ){
                return true;
            }
            
            
            //column check
            if((board[0][i]== symbol) && (board[1][i]==symbol) && (board[2][i]==symbol) ){
                return true;
            }
                        
        }
        //diagonal left check
        if((board[0][0]== symbol) && (board[1][1]==symbol) && (board[2][2]==symbol) ){
          return true;
        }
        
        //diagonal right check
        if((board[0][2]== symbol) && (board[1][1]==symbol) && (board[2][0]==symbol) ){
          return true;
        }        
        return false;           
    }
    
    char [][] board=new char[3][3];
    int turn=0;
    int p1score=0;
    int p2score=0;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn00;
    private javax.swing.JButton btn01;
    private javax.swing.JButton btn02;
    private javax.swing.JButton btn10;
    private javax.swing.JButton btn11;
    private javax.swing.JButton btn12;
    private javax.swing.JButton btn20;
    private javax.swing.JButton btn21;
    private javax.swing.JButton btn22;
    private javax.swing.JButton btnreload;
    private javax.swing.JButton btnreset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JLabel lblplayeronescore;
    private javax.swing.JLabel lblplayerturn;
    private javax.swing.JLabel lblplayertwoscore;
    private javax.swing.JPanel pnlBoard;
    // End of variables declaration//GEN-END:variables
}
